const <%- singularName %>Service = require('../services/<%- singularName %>Service');

const get<%- singularCamelCaseName %>ById = async (req, res, next) => {
  try {
    const { id } = req.params;
    const result = await <%- singularName %>Service.get<%- singularCamelCaseName %>ById(id);
    res.json(result);
  } catch (error) {
    next(error);
  }
};

const getAll<%- singularCamelCaseName %>s = async (req, res, next) => {
  try {
    const result = await <%- singularName %>Service.getAll<%- singularCamelCaseName %>s();
    res.json(result);
  } catch (error) {
    next(error);
  }
};

const create<%- singularCamelCaseName %> = async (req, res, next) => {
  try {
    const data = req.body;
    const result = await <%- singularName %>Service.create<%- singularCamelCaseName %>(data);
    res.json(result);
  } catch (error) {
    next(error);
  }
};

const update<%- singularCamelCaseName %> = async (req, res, next) => {
  try {
    const { id } = req.params;
    const data = req.body;
    const result = await <%- singularName %>Service.update<%- singularCamelCaseName %>(id, data);
    res.json(result);
  } catch (error) {
    next(error);
  }
};

const delete<%- singularCamelCaseName %> = async (req, res, next) => {
  try {
    const { id } = req.params;
    const result = await <%- singularName %>Service.delete<%- singularCamelCaseName %>(id);
    res.json(result);
  } catch (error) {
    next(error);
  }
};

module.exports = {
  get<%- singularCamelCaseName %>ById,
  getAll<%- singularCamelCaseName %>s,
  create<%- singularCamelCaseName %>,
  update<%- singularCamelCaseName %>,
  delete<%- singularCamelCaseName %>,
};